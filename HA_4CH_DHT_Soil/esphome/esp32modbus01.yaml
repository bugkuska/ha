esphome:
  name: esp32modbus01
  friendly_name: esp32modbus01

esp32:
  board: esp32dev
  framework:
    type: arduino
substitutions:
  esp_name: esp32modbus01
  
# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "g1m4HMsBX8SZ0Jf8MR1ffh/1l6cggLR2QPsdasdsadUB8Z1t7L4="

ota:
  - platform: esphome
    password: "e06ed21aa622sdsadsa1903b5cb1bcc986ca7c1"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: none
  
  manual_ip:
    # Set this to the IP of the ESP
    static_ip: 192.168.1.52
    # Set this to the IP address of the router. Often ends with .1
    gateway: 192.168.1.1
    # The subnet of the network. 255.255.255.0 works for most home networks.
    subnet: 255.255.255.0
    dns1: 192.168.1.1

# Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32Modbus01Hotspot"
    password: "0814111142"
    
# Use the on_connect trigger to turn on GPIO2
  on_connect:
    then:
      - switch.turn_on: gpio2

time:
  - platform: homeassistant
    id: homeassistant_time
  # Use the on_connect trigger to turn on GPIO2

          
captive_portal:

switch:
# Add a switch for GPIO2
  - platform: gpio
    id: gpio2
    pin: 2
    restore_mode: ALWAYS_OFF

# Turn on GPIO2 when WiFi is connected
  - platform: template
    name: "WiFi Connected Switch"
    turn_on_action:
      then:
        - switch.turn_on: gpio2
    lambda: |-
      return id(wifi_status).state;

# Onboard 4CH Digital Relay
  - platform: gpio
    name: "Relay 1"
    id: relay_1
    pin: 25

  - platform: gpio
    name: "Relay 2"
    id: relay_2
    pin: 33
    
  - platform: gpio
    name: "Relay 3"
    id: relay_3
    pin: 32
    
  - platform: gpio
    name: "Relay 4"
    id: relay_4
    pin: 23   

#Binary Sensor for Wifi Status
binary_sensor:
  - platform: status
    name: "WiFi Status"
    id: wifi_status

sensor:
  #SoilMoisture Sensor
  - platform: adc
    pin: 35
    
    filters:
      - lambda: |-
          if (x > 3.15) {
            return 100;
          } else if (x < 1.30) {
            return 0;
          } else {
            return (3.15-x) / (3.15-1.30) * 100.0;
          }
    name: "Soil Moisture Level"
    unit_of_measurement: "%"
    device_class: humidity
    icon: "mdi:watering-can"
    update_interval: 2s
    attenuation: auto
    accuracy_decimals: 0

#DHT Sensor
  - platform: dht
    pin: 18
    temperature:
      name: "Air Temperature"
      id: air_temperature
    humidity:
      name: "Air Humidity"
    update_interval: 10s
    
# Check esp uptime
  - platform: uptime
    name: "${esp_name} - Uptime"
    icon: mdi:clock-outline
    update_interval: 60s

# Reports the WiFi signal strength/RSSI in dB
  - platform: wifi_signal 
    name: "${esp_name} - WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

# Reports the WiFi signal strength in %
  - platform: copy 
    source_id: wifi_signal_db
    name: "${esp_name} - WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""   
